2.자료형에 대한 자세한 내용과 배열, 문자열


1.정수형(integer)

 정수(integer)란 부호는 있지만, 소수점 이하를 표현하지 못하는 수이다. 
12.23, 0.1 이런 값은 소수점 이하가 있으므로 정수가 아니다. 정수의 더 이상의 정수의 정의는 
중학교 수준에서 설명이 됨으로 더 이상 다루지 않을 것이다. 우리가 아는 정수랑 컴퓨터가 아는 정수가 다른 점이 있다면, 
컴퓨터의 메모리는 유한하기 때문에 수학적 정의와 같은 무한대의 범위를 지원하지 않는 정도만 다르다.   

int i;
키워드 int 음에 원하는 변수 이름 그리고 세미콜론으로 구성되어 있다.  
컴파일러는 이 선언문을 만났을 때 정수 값을 저장할만한 4바이트 공간을 할당하고 이 공간에 대해 i라는 이름을 붙여줄 것이다. 
이후 i라는 변수명을 통해 이 메모리에 정수 값을 저장할 수 있고 또 값을 읽을 수도 있다.  정수형의 최대 표현 가능한 값의 크기와 부호의 존재 유무에 따라 여러 가지 종류로 나눠진다.  

먼저 변수의 크기와 표현 가짓수의 관계에 대해 알아보면, 값 하나를 표현하기 위해 몇 비트를 사용할 것인가에 따라 표현 가능한 수의 개수가 달라진다. 
예를 들어 1비트로만 구성된 정수형이 있다면, 이 정수는 0과 1의 두 가지 상태밖에 기억하지 못한다. 이런 비트가 두게 오면 00, 01, 10, 11 네 가지 각각 다른 상태를 표현할 수 있다. 
비트가 세 개가 모인다면 2^3 승개 즉 8개의 수를 표현할 수 있다. 

같은 원리로 비트가 4개 모이면 16가지의 상태를 표현할 수 있을 것이다. 
일반적으로 n개의 비트가 모이면 2^n 가지의 수를 표현하는 것이 가능하며, 0부터 시작하므로 최대 표현 가능 수는 2^n-1이 된다. 
8비트로 구성되는 1바이트는 총 256(0~255) 가지의 종류의 수를 표현할 수 있고, 표현 가능한 최대 수는 255가 된다. 

int가 표현할 수 있는 데이터의 용량은 4바이트이다. (1byte==8bit)
컴퓨터는 0과 1밖에 모르기 때문에 우리는 8bit로 컴퓨터에게 얼마의 데이터 크기로 얼마를 표현할 것인지 알려주는 것이다. 
1bit에 0과 1을 사용할 수 있으므로 0과 1을 표현할 수 있다.
int는 부호가 있는 4바이트짜리 자료형이므로 +-2의 16승까지 표현할 수 있다.

이 밖에도 여러가지 자료형이 있는데 그 자료형이 가질 수 있는 크기(바이트)가 다르니 이 부분은 암기 해두는 것이 앞으로 편하다.

2.문자형
문자형이란 문자 하나를 표현하는 자료형이다.
컴퓨터는 원래 숫자밖에 모르기 때문에 문자도 숫자로 기억한다. 
이때 어떤 숫자와 어떤 문자를 대응시키는가에 따라 여러가지 인코딩 방식이 있는데 통상 아스키 코드를 많이 사용한다. 
아스키코드는 0~255 사이의 숫자에 문자를 대응시켜 놓았는데 아스키 코드 표를 보면 대문자 A는 문자코드 65로 소문자 a는 97로 표현 가능하며 숫자 1은 49로 표현이 가능하다. 
아스키코드를 다 외우는 것은 힘드닌까 그냥 자주 사용하는 A a의 아스키 코드만 외우자

3.배열
배열의 선언 방법
[타입(자료형)] 배 열명[크기]; 

예시)

int arr [5] //정수형 변수 5개의 집합인 배열 array를 선언
double rate [10]; //실수형 변수 10개의 집합인 배열 rate를 선언 

그리고 이렇게 할당된 배열에서 요소를 참조할 때는 [] 괄호와 첨자(index)를 사용한다.  첨자는 요소가 그 배열의 몇 번째에 있는지를 나타내는 순서 값이다. 

배열이란 같은 타입의 변수를 모아 놓은 것이며 문자 배열이란 문자형 변수 여러 개가 연속적으로 배치되어 있는 것이다. 
char s1[10] H E L L O \0 \0 \0 \0 \0
위 코드에서 각 글자는 1바이트의 문자들이며 각 배열 위치에 문자 하나씩이 들어있다.  
제일 끝에는 '\0'이 있는데 '\0'은 여기가 문자열의 끝임을 알리는 역할을 하며 널 종료 문자라고 한다.
메모리는 연속적인 공간이므로 끝을 명확히 해야 한다.  문자열이 아닌 다른 자료형은 \0이 없어도 된다. 

3. 문자열
말그대로 문자를 배열에 넣은것이다. 
c언어는 문자열을 담을때 배열을 선언해서 하는 귀찮음이 있음
char ch[10]="abcdefg"; (c언어) 
string str="abcdefg"; (c++) =알아서 메모리 할당
a="abcdefg";(python) = 그냥 사용하기 쉬움


