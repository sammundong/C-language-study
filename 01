1.기본 입출력과 자료형
c언어를 시작하면 가장 처음으로 보는 코드입니다. 

#include <stdio.h>
int main(){

	printf("hello");
	return 0;
}

exe파일을 실행시키면 검은 화면에 hello라는 문장이 출력됩니다. 

위 코드를 해석하면 

#include <stdio.h>

= stdio.h라는 헤더 파일을 포함하라는 뜻으로 stdio.h에 대한 자세한 내용을 알고 싶다면

구글에 검색을 해보면, 자세한 내용을 볼 수 있다.
지금 우리가 알아야 될 내용은 stdio.h의 라이브러리의 c컴파일러가 제공하는 표준 함수들에 대한 선언이 작성되어 있다는 것이다.
입력과 출력이 가장 대표적인데, stdio.h를 포함함(<>)으로써 
printf(출력), scanf(입력) 앞으로 배울 입출력을 (printf, scanf)를 사용해서 한다는 것을 컴파일러는 알 수 있게 된다. 


라이브러리란? 라이브러리는 소프트웨어를 개발할 때 컴퓨터 프로그램이 사용하는
비휘발성 자원의 모임이다. 여기에는 미리 작성된 코드, 함수, 클래스, 값, 자료형을 포함되어있고, 
사용할 수 있다.



int main(){
=(반환 값의 자료형) 함수 이름으로 반환 값은 int(정수형) main 함수이다.
main은 함수의 이름인데 C 프로그램은 항상 main 함수에서부터 실행을 시작한다.
그리고 {} 괄호가 있는데 이 괄호는 함수의 시작과 끝을 표시한다.
{} 안이 곧 함수의 본체이며 여기에 실행하고 싶은 명령을 작성한다.


printf("hello");
return 0;



=printf는 출력을 나타내는 함수이고 그 안의 내용은 "" 쌍 다운 표로 감싸줍니다.
return 0; 는 int main에서 반환 값이 정수라고 했으니 return 반환한다는 말에 0을 리턴해줍니다.
사실 0 말고 다른 거해도 상관없긴 한데 0을 반환하는 이유는 해당 함수를 성공적으로 끝내려고
쓰는 것입니다. 


다음 변수
변수(變數, variable)
변수 선언 공식

	자료형 변수 이름 = (초기화 값)
    ex)  int      num = 0;  ==> num이라는 정수를 담을 수 있는 바구니에 0을 초기화한다.
    
변수는 프로그래밍에 입문할 때 가장 먼저 배워야 하는 개념이다. 말뜻 그대로 변할 수 있는 수,
즉, 고정되어 있지 않은 수라는 뜻이며 1이나 45 또는 0.12 같은 상수의 반대 개념이다.

이름은 변수지만 반드시 수치 값만 저장되는 것은 아니며 문자열이나 포인터 같은

좀 더 복잡한 값도 저장될 수 있다.

변수에서 말하는 수를 좀 더 일반적으로 표현하면 데이터이며 더 쉽게는 값이라고 한다.

변수를 정의할 때는 몇가지 규칙이 있는데 이것을 어기면 오류가 발생한다.


변수명을 정의할때 규칙(4가지)
1. 모든 변수는 사용되기 전에 선언해야 한다.

2. 영문자 또는_(언더바)로 시작해야 한다.

3. 중간에 숫자와 _(언더바)를 섞을 수 있다. (ex: one_of_kind)

4. 예약어로는 사용이 불가하다.(ex: int, double, char, \등등 불가능)

 

 

그리고 변수명을 작성하는 일반적인 몇 가지 팁이 있다. 

1. 의미를 잘 설명할 수 있는 이름을 주는 것이 좋다.  (ex: name, age, address)

=처음에는 편하기 때문에 a, b, 같은 짧은 변수명을 즐겨 사용하지만, 

실무에서는 적절한 변수명을 붙이는 것이 중요하다. 
나중에 프로젝트를 하게 되면 몇백 줄짜리 코드에서 내가 무슨 의도로 변수를 선언했는지 

한눈에 알아보기 쉽게 하기 위해서이기도 하다.  

2. 변수 명의 길이는 작게 (너무 길게 적으면 코드가 간결해 보이지 않다)

3. 대소문자 구성을 일관되게 하자.
(Korea와 korea는 서로 다른 것이다. 모두 소문자로 쓰던가 첫 문자만 대문자로 하는 규칙을 세우는 것이 중요)

4. 짧은 영단어 활용 
(ex: 영어를 모른다면 sum 말고 hap(합)) 

자료형

위에서 말한 변수를 선언하기 위해서는 자료형이라는 것이 필요한데,
자료형은 말 그대로 자료의 형태를 의미합니다.
포로그램 내에서의 변수 사용은 데이터를 어떤 형태로 얼마의 크기로 저장할 것인지 '자료형'을 미리 정하는 것이다.
대표적으로는 int, long long int, foat, double, char 이 있다.

자세한 내용은 : https://ko.wikipedia.org/wiki/%EC%9E%90%EB%A3%8C%ED%98%95


다음은 출력할때 서식문자에 대해서 다뤄보겠습니다. 
서식문자란?

서식문자는 출력대상의 형태를 지정해주는 문자입니다. printf함수나 scanf같은 입출력 함수를 
사용할때 서식문자를 이용해 입출력형태를 지정해주고, 콤마(,)를 이요해서 변수나 식으로 값을
넣어줄수 있습니다. 대표적으로 %d도 이 서식문자에 해당됩니다.

그리고 이 서식 문자를 이용해서 소수점 자리를 조절하거나, 좌측 정렬이 가능합니다. 

변수 선언 시에 고려해야 할 3가지 사항


1. 변수에 저장될 값의 크기 : 변수의 범위보다 오버플로우 혹은 언더플로우가 발생하지 않도록
 최솟값과 최댓값의 범위를 고려해야 한다.


2. 변수의 선언 위치 : 변수를 함수 외부에 선언하면 전역, 함수 내부에 선언하면 
지역변수로 선언되어 특정 지역 내에서만 사용된다. 두 공간은 다른 공간이다. 
전역 변수는 자료 영역에, 지역변수는 임시 공간인 스택 영역에 저장된다.


3. 변수의 초기화: 선언된 변수에 특정한 값을 부여하는 것이다. 
초기화를 하지 않는다면 기존의 값인 쓰레기 값이 남아서 에러가 발생할 수 있다.





